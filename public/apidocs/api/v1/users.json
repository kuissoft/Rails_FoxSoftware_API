{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000/",
  "resourcePath": "users",
  "apis": [
    {
      "path": "api/v1/users/get_address_by_zip.json",
      "operations": [
        {
          "summary": "Find State and City by Zip code (USA)",
          "parameters": [
            {
              "paramType": "query",
              "name": "zip",
              "type": "string",
              "description": "Zip",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 500,
              "responseModel": null,
              "message": "Not found"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "{'zip':'20636','state':'MD','city':'Hollywood','lat':'38.352356','lon':'-76.562644'}"
            }
          ],
          "method": "post",
          "nickname": "Api::V1::Users#get_address_by_zip"
        }
      ]
    },
    {
      "path": "api/v1/users.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "access-token",
              "type": "string",
              "description": "Logged in user access token",
              "required": true
            },
            {
              "paramType": "header",
              "name": "uid",
              "type": "string",
              "description": "Logged in user UID(uid from oauth or email)",
              "required": true
            },
            {
              "paramType": "header",
              "name": "client",
              "type": "string",
              "description": "Cliend ID",
              "required": true
            },
            {
              "paramType": "query",
              "name": "page",
              "type": "integer",
              "description": "Page",
              "required": false,
              "defaultValue": 1
            },
            {
              "paramType": "query",
              "name": "limit",
              "type": "integer",
              "description": "Results limit",
              "required": false,
              "defaultValue": 10
            }
          ],
          "method": "get",
          "nickname": "Api::V1::Users#index"
        }
      ]
    },
    {
      "path": "api/v1/users.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "access-token",
              "type": "string",
              "description": "Logged in user access token",
              "required": true
            },
            {
              "paramType": "header",
              "name": "uid",
              "type": "string",
              "description": "Logged in user UID(uid from oauth or email)",
              "required": true
            },
            {
              "paramType": "header",
              "name": "client",
              "type": "string",
              "description": "Cliend ID",
              "required": true
            }
          ],
          "method": "post",
          "nickname": "Api::V1::Users#create"
        }
      ]
    },
    {
      "path": "api/v1/users/{id}.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "access-token",
              "type": "string",
              "description": "Logged in user access token",
              "required": true
            },
            {
              "paramType": "header",
              "name": "uid",
              "type": "string",
              "description": "Logged in user UID(uid from oauth or email)",
              "required": true
            },
            {
              "paramType": "header",
              "name": "client",
              "type": "string",
              "description": "Cliend ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "User ID",
              "required": true
            }
          ],
          "summary": "Fetches a single User item",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "User",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            }
          ],
          "method": "get",
          "nickname": "Api::V1::Users#show"
        }
      ]
    },
    {
      "path": "api/v1/users/{id}.json",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "access-token",
              "type": "string",
              "description": "Logged in user access token",
              "required": true
            },
            {
              "paramType": "header",
              "name": "uid",
              "type": "string",
              "description": "Logged in user UID(uid from oauth or email)",
              "required": true
            },
            {
              "paramType": "header",
              "name": "client",
              "type": "string",
              "description": "Cliend ID",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user[first_name]",
              "type": "string",
              "description": "First Name",
              "required": false
            },
            {
              "paramType": "form",
              "name": "user[last_name]",
              "type": "string",
              "description": "Last Name",
              "required": false
            },
            {
              "paramType": "form",
              "name": "user[email]",
              "type": "string",
              "description": "Email",
              "required": false
            }
          ],
          "summary": "Update user details",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "User",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "Not Valid"
            }
          ],
          "method": "patch",
          "nickname": "Api::V1::Users#update"
        }
      ]
    }
  ]
}